management: # spring-boot-starter-acturator 设置监控端口 监控端口和业务端口分开
  port: 9001
  
server: 
  port: 8082
  tomcat:
    uri-encoding: UTF-8
spring:
  messages:
    encoding: UTF-8 
  application:
    name: microservice-user-consumer
    index: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
  profiles:
    active: test
  sleuth:
    sampler:
      percentage: 1.0
  cloud:    
    bus:
      trace:
        enabled: true
      destination: configserver
    stream:
      default-binder: rabbit1
      rabbit: 
           bindings: 
              springCloudBusInput: 
                  consumer: 
                    durableSubscription: false
                    
      
      bindings:
        springCloudBusInput: #consumer
          destination: configserver
          binder: rabbit1
          group: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
#        springCloudBusOutput: #producer
#          destination: configserver
#          binder: rabbit1  
      binders:
        rabbit1:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: 119.29.8.74
                port: 5672
                username: guest
                password: guest
        kafka1:
          type: kafka
          environment:
            spring:
              kafka:
                producer: 
                  bootstrap-servers:
                      - 119.29.8.74:9092

  kafka:
    producer: 
      bootstrap-servers:
          - 119.29.8.74:9092     
  zipkin:
    sender:
      type: kafka
    encoder: json-v2  
    kafka:
      topic: zipkin
      
  http:
    encoding:
      force: true
      charset: UTF-8
      enabled: true
   
eureka:
  client:
    service-url:
      defaultZone: http://user:password123@localhost:8080/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
    lease-renewal-interval-in-seconds: 30
    status-page-url-path: http://${spring.cloud.client.ipAddress}:${server.port}/swagger-ui.html
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      management.port: 9000

